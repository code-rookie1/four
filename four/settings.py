"""
Django settings for four project.

Generated by 'django-admin startproject' using Django 3.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)


BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'qvh%rkiomw$xq@$a6=d^sx6&bh-k6k-1mz^xzvi8__0uv2p@if'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']  # 允许所有ip访问
# 跨域增加忽略
CORS_ALLOW_CREDENTIALS = True
CORS_ORIGIN_ALLOW_ALL = True

# CORS_ALLOW_METHODS = (
#     'DELETE',
#     'GET',
#     'OPTIONS',
#     'PATCH',
#     'POST',
#     'PUT',
#     'VIEW',
# )
#
# CORS_ALLOW_HEADERS = (
#     'XMLHttpRequest',
#     'X_FILENAME',
#     'accept-encoding',
#     'authorization',
#     'content-type',
#     'dnt',
#     'origin',
#     'user-agent',
#     'x-csrftoken',
#     'x-requested-with',
#     'Pragma',
# )

INSTALLED_APPS = [
    'simpleui',  # 一个django的后台管理第三方包
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'haystack',  # 搜索
    'user',
    'rest_framework',
    'rest_framework_swagger',
    'banner',
    'community',
    'course',
    'django_filters',
    'corsheaders',
    'social_django',   #第三方登录


]

MIDDLEWARE = [
    'middleware.BaseMiddleWare.learnAOP',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',  # 注意顺序，必须放在这儿
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'four.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social_django.context_processors.backends',           #第三方登录的两个配置
                'social_django.context_processors.login_redirect',
            ],
        },
    },
]

WSGI_APPLICATION = 'four.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'FOUR',
        'USER': 'root',
        'PASSWORD': 'root',
        'HOST': '192.168.19.1',
        'PORT': 3306,
        # "OPTIONS": {"init_command": "SET default_storage_engine=INNODB;"}   #第三方登录有可能不适应mysql的misamm引擎
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'




#第三方登录设置
AUTHENTICATION_BACKENDS = (
    'social_core.backends.weibo.WeiboOAuth2',
    # 'social_core.backends.qq.QQOAuth2',
    # 'social_core.backends.weixin.WeixinOAuth2',
    'django.contrib.auth.backends.ModelBackend',
)
SOCIAL_AUTH_WEIBO_KEY = '165036508'
SOCIAL_AUTH_WEIBO_SECRET = 'aae38e3d40b1bb429e40a1eacb6ad23e'

SOCIAL_AUTH_QQ_KEY = 'xxxxxxx'
SOCIAL_AUTH_QQ_SECRET = 'xxxxxxx'

SOCIAL_AUTH_WEIXIN_KEY = 'xxxxxxx'
SOCIAL_AUTH_WEIXIN_SECRET = 'xxxxxxx'

#登录成功后跳转到首页
SOCIAL_AUTH_LOGIN_REDIRECT_URL = '/course/courseInfo/'

# AUTH_USER_MODEL = 'user.User'

# 阿里短信设置
ALI_KEY = "your key"
ALI_SECRET = 'your secret'
ALI_REGION = 'your region'  # 一般是 'cn-hangzhou'
ALI_SIGNNAME = 'your signame'
# 登录使用的信息模板
ALI_LOGOIN_CODE = 'your msg tempalte id'

# 缓存配置
# CACHES = {
#     "default": {
#         "BACKEND": "django_redis.cache.RedisCache",
#         "LOCATION": "redis://192.168.19.140:6379/0",  # 就是Ubuntu的ip地址,安装pip install django-redis
#         "OPTIONS": {
#             "CLIENT_CLASS": "django_redis.client.DefaultClient",
#         }
#     }
# }

# celery的配置
# CELERY_BROKER_URL = 'redis://192.168.1.62/1'
# CELERY_RESULT_BACKEND = 'redis://192.168.1.62/2'

# 增加搜索引擎配置（有solr，whoosh，elastic search）,这里选择whoosh
HAYSTACK_CONNECTIONS = {
    'default': {
        'ENGINE': 'haystack.backends.whoosh_backend.WhooshEngine',  # 自身的引擎
        # 'ENGINE': 'course.whoosh_backend.WhooshEngine',  #添加结巴分词后的自身的的引擎
        'PATH': os.path.join(BASE_DIR, 'whoosh_index'),
    },
}
# 配置自动更新索引
HAYSTACK_SIGNAL_PROCESSOR = 'haystack.signals.RealtimeSignalProcessor'
# 配置搜索结果的分页器的每页数量（rest-framework里面用不到）
# HAYSTACK_SEARCH_RESULTS_PER_PAGE = 10


REST_FRAMEWORK = {
    "DEFAULT_SCHEMA_CLASS": "rest_framework.schemas.AutoSchema",   #自动生成api文档
}


#七牛云配置

# SELF_HOST = 'https://4bytes.cn/'   #这是七牛云回填给自己的域名
QINIU_ACCESS_KEY = 'sLiRDRaeUJrpVTiVI9EGhhEJRkXqJ9ZWDVoX3rfI'
QINIU_SECRET_KEY = 'rvPGk8m0T3CF8G2yXYqJy3SWopWkb_69Owg3woq9'
QINIU_BUCKET_NAME = 'walkmanstore'

QINIU_BUCKET_DOMAIN = 'http://q8goto9jq.bkt.clouddn.com/'
#
# QINIU_SECURE_URL = False  # 使用http
#
# PREFIX_URL = 'http://'
#
# DEFAULT_FILE_STORAGE = 'qiniustorage.backends.QiniuMediaStorage'

# 支付宝相关配置
private_key_path = os.path.join(BASE_DIR,'Utils/ali_keys/private_2048.txt')
ali_pub_key_path = os.path.join(BASE_DIR,'Utils/ali_keys/alipay_key_2048.txt')
